{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lucky/Development/code/phase_2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  _s();\n\n  //settin up states\n  const [transactions, setTransactions] = useState([]); // initializing form data object\n\n  const [transactionForm, setTransactionForm] = useState({\n    id: 0,\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  }); //fetch data using useEffect and fetch\n\n  function fetchData() {}\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\").then(res => res.json()).then(data => {\n      setTransactions(data);\n      console.log(data);\n    });\n  }, []); //handling form Data changes\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setTransactionForm(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n  } // post data to db.json when the form is submitted\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(transactionForm)\n    }).then(() => {\n      console.log(\"data added\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      transactionForm: transactionForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactionsObj: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountContainer, \"NNlFEb9mNlo0g28PP2tOAK663jE=\");\n\n_c = AccountContainer;\nexport default AccountContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"sources":["/home/lucky/Development/code/phase_2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js"],"names":["React","useEffect","useState","TransactionsList","Search","AddTransactionForm","AccountContainer","transactions","setTransactions","transactionForm","setTransactionForm","id","date","description","category","amount","fetchData","fetch","then","res","json","data","console","log","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","method","headers","body","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD,CAH0B,CAK1B;;AAEA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC;AACrDS,IAAAA,EAAE,EAAE,CADiD;AAErDC,IAAAA,IAAI,EAAE,EAF+C;AAGrDC,IAAAA,WAAW,EAAE,EAHwC;AAIrDC,IAAAA,QAAQ,EAAE,EAJ2C;AAKrDC,IAAAA,MAAM,EAAE;AAL6C,GAAD,CAAtD,CAP0B,CAe1B;;AACA,WAASC,SAAT,GAAqB,CAEpB;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdb,MAAAA,eAAe,CAACa,IAAD,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT,CApB0B,CA6B1B;;AAEA,WAASG,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAlB,IAAAA,kBAAkB,CAAEmB,QAAD,IAAc;AAC/B,aAAO,EACL,GAAGA,QADE;AAEL,SAACH,IAAD,GAAQC;AAFH,OAAP;AAID,KALiB,CAAlB;AAMD,GAvCyB,CAyC1B;;;AAEA,WAASG,YAAT,CAAsBL,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACM,cAAF;AACAd,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1Ce,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe3B,eAAf;AALoC,KAAvC,CAAL,CAMGS,IANH,CAMQ,MAAM;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KARD;AASD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AACE,MAAA,YAAY,EAAEC,YADhB;AAEE,MAAA,YAAY,EAAEM,YAFhB;AAGE,MAAA,eAAe,EAAErB;AAHnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,gBAAD;AAAkB,MAAA,eAAe,EAAEF;AAAnC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnEQD,gB;;KAAAA,gB;AAqET,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  //settin up states\n\n  const [transactions, setTransactions] = useState([]);\n\n  // initializing form data object\n\n  const [transactionForm, setTransactionForm] = useState({\n    id: 0,\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\",\n  });\n\n  //fetch data using useEffect and fetch\n  function fetchData() {\n    \n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\")\n      .then((res) => res.json())\n      .then((data) => {\n        setTransactions(data);\n        console.log(data);\n      });\n  }, []);\n\n  //handling form Data changes\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setTransactionForm((prevData) => {\n      return {\n        ...prevData,\n        [name]: value,\n      };\n    });\n  }\n\n  // post data to db.json when the form is submitted\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(transactionForm),\n    }).then(() => {\n      console.log(\"data added\");\n    });\n  }\n\n  return (\n    <div>\n      <Search />\n      <AddTransactionForm\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        transactionForm={transactionForm}\n      />\n      <TransactionsList transactionsObj={transactions} />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"]},"metadata":{},"sourceType":"module"}