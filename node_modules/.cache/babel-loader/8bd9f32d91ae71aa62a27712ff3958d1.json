{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lucky/Development/code/phase_2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  _s();\n\n  //settin up states\n  const [transactions, setTransactions] = useState([]);\n  const [query, setQuery] = useState(\"\"); // initializing form data object\n\n  const [transactionForm, setTransactionForm] = useState({\n    id: 0,\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  }); //fetch data using useEffect and fetch\n\n  const fetchData = () => {\n    return fetch(\"http://localhost:8001/transactions?q=\" + query).then(res => res.json()).then(data => {\n      setTransactions(data);\n    }).catch(err => console.log(err + \" \" + \"Run server first\"));\n  };\n\n  useEffect(fetchData, [query]); //handling form Data changes\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setTransactionForm(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n  } // post data to db.json when the form is submitted\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(transactionForm)\n    }).then(() => {\n      fetchData();\n    }).catch(err => console.log(err + \" \" + \"Run server first\"));\n  } // handling search form\n\n\n  function handleSearch(e) {\n    setQuery(query => e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      transactionForm: transactionForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactionsObj: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountContainer, \"Gsd4ETcHzLIptEqi6Q3E0VT2fGY=\");\n\n_c = AccountContainer;\nexport default AccountContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"sources":["/home/lucky/Development/code/phase_2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js"],"names":["React","useEffect","useState","TransactionsList","Search","AddTransactionForm","AccountContainer","transactions","setTransactions","query","setQuery","transactionForm","setTransactionForm","id","date","description","category","amount","fetchData","fetch","then","res","json","data","catch","err","console","log","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","method","headers","body","JSON","stringify","handleSearch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAJ0B,CAM1B;;AAEA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC;AACrDW,IAAAA,EAAE,EAAE,CADiD;AAErDC,IAAAA,IAAI,EAAE,EAF+C;AAGrDC,IAAAA,WAAW,EAAE,EAHwC;AAIrDC,IAAAA,QAAQ,EAAE,EAJ2C;AAKrDC,IAAAA,MAAM,EAAE;AAL6C,GAAD,CAAtD,CAR0B,CAgB1B;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtB,WAAOC,KAAK,CAAC,0CAA0CV,KAA3C,CAAL,CACJW,IADI,CACEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADV,EAEJF,IAFI,CAEEG,IAAD,IAAU;AACdf,MAAAA,eAAe,CAACe,IAAD,CAAf;AACD,KAJI,EAKJC,KALI,CAKGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,GAAG,GAAN,GAAW,kBAAvB,CALX,CAAP;AAMD,GAPD;;AASAxB,EAAAA,SAAS,CAACiB,SAAD,EAAY,CAACT,KAAD,CAAZ,CAAT,CA1B0B,CA4B1B;;AAEA,WAASmB,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACApB,IAAAA,kBAAkB,CAAEqB,QAAD,IAAc;AAC/B,aAAO,EACL,GAAGA,QADE;AAEL,SAACH,IAAD,GAAQC;AAFH,OAAP;AAID,KALiB,CAAlB;AAMD,GAtCyB,CAwC1B;;;AAEA,WAASG,YAAT,CAAsBL,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACM,cAAF;AACAhB,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CiB,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe7B,eAAf;AALoC,KAAvC,CAAL,CAOGS,IAPH,CAOQ,MAAM;AACVF,MAAAA,SAAS;AACV,KATH,EAUGM,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,GAAG,GAAN,GAAY,kBAAxB,CAVlB;AAWD,GAvDyB,CAyD1B;;;AACA,WAASgB,YAAT,CAAsBZ,CAAtB,EAAyB;AACvBnB,IAAAA,QAAQ,CAAED,KAAD,IAAWoB,CAAC,CAACG,MAAF,CAASD,KAArB,CAAR;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEU;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AACE,MAAA,YAAY,EAAEb,YADhB;AAEE,MAAA,YAAY,EAAEM,YAFhB;AAGE,MAAA,eAAe,EAAEvB;AAHnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,gBAAD;AAAkB,MAAA,eAAe,EAAEJ;AAAnC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAzEQD,gB;;KAAAA,gB;AA2ET,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  //settin up states\n\n  const [transactions, setTransactions] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  // initializing form data object\n\n  const [transactionForm, setTransactionForm] = useState({\n    id: 0,\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\",\n  });\n\n  //fetch data using useEffect and fetch\n  const fetchData = () => {\n    return fetch(\"http://localhost:8001/transactions?q=\" + query)\n      .then((res) => res.json())\n      .then((data) => {\n        setTransactions(data);\n      })\n      .catch((err) => console.log(err + \" \" +\"Run server first\"));\n  };\n\n  useEffect(fetchData, [query]);\n\n  //handling form Data changes\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setTransactionForm((prevData) => {\n      return {\n        ...prevData,\n        [name]: value,\n      };\n    });\n  }\n\n  // post data to db.json when the form is submitted\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(transactionForm),\n    })\n      .then(() => {\n        fetchData();\n      })\n      .catch((err) => console.log(err + \" \" + \"Run server first\"));\n  }\n\n  // handling search form\n  function handleSearch(e) {\n    setQuery((query) => e.target.value);\n  }\n\n  return (\n    <div>\n      <Search handleSearch={handleSearch} />\n      <AddTransactionForm\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        transactionForm={transactionForm}\n      />\n      <TransactionsList transactionsObj={transactions} />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"]},"metadata":{},"sourceType":"module"}